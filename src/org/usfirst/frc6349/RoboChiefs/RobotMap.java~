// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6349.RoboChiefs;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController drivetrainRF;
    public static SpeedController drivetrainRR;
    public static SpeedController drivetrainLF;
    public static SpeedController drivetrainLR;
    public static RobotDrive drivetrainRobotDrive41;
    public static CANTalon intakeCANTalon1;
    public static CANTalon shooterCANTalon2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        drivetrainRF = new Spark(7);
        LiveWindow.addActuator("Drivetrain", "RF", (Spark) drivetrainRF);
        
        drivetrainRR = new Spark(6);
        LiveWindow.addActuator("Drivetrain", "RR", (Spark) drivetrainRR);
        
        drivetrainLF = new Spark(9);
        LiveWindow.addActuator("Drivetrain", "LF", (Spark) drivetrainLF);
        
        drivetrainLR = new Spark(8);
        LiveWindow.addActuator("Drivetrain", "LR", (Spark) drivetrainLR);
        
        drivetrainRobotDrive41 = new RobotDrive(drivetrainLF, drivetrainLR,
              drivetrainRF, drivetrainRR);
        
        drivetrainRobotDrive41.setSafetyEnabled(true);
        drivetrainRobotDrive41.setExpiration(0.1);
        drivetrainRobotDrive41.setSensitivity(0.5);
        drivetrainRobotDrive41.setMaxOutput(1.0);
        drivetrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontLeft, true);
        drivetrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearLeft, true);
        drivetrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        drivetrainRobotDrive41.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        intakeCANTalon1 = new CANTalon(1);
        LiveWindow.addActuator("Intake", "CAN Talon 1", intakeCANTalon1);
        
        shooterCANTalon2 = new CANTalon(2);
        LiveWindow.addActuator("Shooter", "CAN Talon 2", shooterCANTalon2);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
